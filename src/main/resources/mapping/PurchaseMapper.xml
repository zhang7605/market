<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="club.fangqcloud.mapper.PurchaseMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加进货记录 -->
	<insert id="addPurchase" parameterType="purchase">
		insert into purchase(productObj,price,purchaseNum,purchaseDate,supplierObj,memo) values 
		(#{productObj.productId},#{price},#{purchaseNum},#{purchaseDate},#{supplierObj.supplierId},#{memo})
	</insert>

	<!-- 按照查询条件分页查询进货记录 -->
	<select id="queryPurchase" resultMap="purchaseMap" >
		select purchase.* from purchase,product,supplier ${where} and purchase.productObj = product.productId and purchase.supplierObj = supplier.supplierId limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="purchaseMap" type="purchase">
        <id property="purchaseId" column="purchaseId" />
        <association property="productObj" column="productObj" select="club.fangqcloud.mapper.ProductMapper.getProduct" />
        <association property="supplierObj" column="supplierObj" select="club.fangqcloud.mapper.SupplierMapper.getSupplier" />
    </resultMap>

    <!-- 按照查询条件查询所有进货记录 -->
	<select id="queryPurchaseList" resultMap="purchaseMap" >
		select purchase.* from purchase,product,supplier ${where} and purchase.productObj = product.productId and purchase.supplierObj = supplier.supplierId
	</select>

    <!-- 按照查询条件的进货记录数 -->
	<select id="queryPurchaseCount" resultType="int">
		select count(*) from purchase,product,supplier ${where} and purchase.productObj = product.productId and purchase.supplierObj = supplier.supplierId
	</select>

	<!-- 根据主键查询某个进货记录 -->
	<select id="getPurchase" parameterType="int" resultMap="purchaseMap">
		select * from purchase where purchase.purchaseId = #{purchaseId}
	</select>

	<!-- 更新进货记录 -->
	<update id="updatePurchase" parameterType="purchase">
		update purchase set productObj=#{productObj.productId},price=#{price},purchaseNum=#{purchaseNum},purchaseDate=#{purchaseDate},supplierObj=#{supplierObj.supplierId},memo=#{memo} where purchaseId = #{purchaseId}
	</update>

	<!-- 删除进货记录 -->
	<delete id="deletePurchase" parameterType="int">
		delete from purchase where purchaseId=#{purchaseId}
	</delete>

</mapper>
